[{"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js":"6","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\Footer.js":"7","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\Header.js":"8","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\views\\HomeScreen.js":"9","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\MainBody.js":"10","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\SearchBarField.js":"11","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\PredictButton.js":"12","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\DeleteButton.js":"13","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\EditButton.js":"14","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\AddButton.js":"15","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\datePicker.js":"16","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\ViewCorrespondenceButton.js":"17","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\SnackbarDialog.js":"18","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\reducers\\reducer.js":"19","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\actions\\action.js":"20","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\DatePicker.js":"21","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\MyTable.js":"22"},{"size":949,"mtime":1617129840871,"results":"23","hashOfConfig":"24"},{"size":1217,"mtime":1616255536603,"results":"25","hashOfConfig":"24"},{"size":5226,"mtime":1589284044061,"results":"26","hashOfConfig":"24"},{"size":475,"mtime":1616328565590,"results":"27","hashOfConfig":"24"},{"size":144,"mtime":1616316201382,"results":"28","hashOfConfig":"24"},{"size":6550,"mtime":1610991213040,"results":"29","hashOfConfig":"24"},{"size":1243,"mtime":1616347790806,"results":"30","hashOfConfig":"24"},{"size":778,"mtime":1616347730566,"results":"31","hashOfConfig":"24"},{"size":433,"mtime":1616347784961,"results":"32","hashOfConfig":"24"},{"size":1183,"mtime":1617175729095,"results":"33","hashOfConfig":"24"},{"size":2458,"mtime":1617193816076,"results":"34","hashOfConfig":"24"},{"size":1490,"mtime":1617097341541,"results":"35","hashOfConfig":"24"},{"size":3921,"mtime":1616352147664,"results":"36","hashOfConfig":"24"},{"size":5908,"mtime":1616353811785,"results":"37","hashOfConfig":"24"},{"size":9811,"mtime":1617131245067,"results":"38","hashOfConfig":"24"},{"size":974,"mtime":1617102144680,"results":"39","hashOfConfig":"24"},{"size":7233,"mtime":1617193332577,"results":"40","hashOfConfig":"24"},{"size":3682,"mtime":1616183084241,"results":"41","hashOfConfig":"24"},{"size":286,"mtime":1617107261103,"results":"42","hashOfConfig":"24"},{"size":112,"mtime":1616259337991,"results":"43","hashOfConfig":"24"},{"size":983,"mtime":1616347891392,"results":"44","hashOfConfig":"24"},{"size":7221,"mtime":1617131734636,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1r5rgwo",{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"49"},"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\index.js",["105"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MyApp from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport theme from '../src/utils/theme';\r\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport reducer from './reducers/reducer.js'\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <MyApp />\r\n    </MuiThemeProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\nCRACKED BY ILLUMINATI\r\nTRUST US AND UNCOMMENT THIS CODE ONCE YOU SETUP YOUR REDUX STORE ;-)\r\n ReactDOM.render(\r\n   <Provider store={store}>\r\n     <MuiThemeProvider theme={theme}>\r\n       <App />\r\n     </MuiThemeProvider>\r\n   </Provider>,\r\n   document.getElementById('root')\r\n );\r\n*/\r\nserviceWorker.unregister();\r\n\r\n\r\n",["106","107"],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\App.js",["108","109","110","111","112","113","114"],"import React from 'react';\r\nimport './App.css';\r\nimport theme from '../src/utils/theme';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport CollectorDashboard from '../src/views/CollectorDashboard';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ROLL_NUMBER } from '../src/utils/constants';\r\nimport HomeScreen from '../src/views/HomeScreen'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em',\r\n      height: '0.4em',\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#6D7183',\r\n      outline: '1px solid slategrey',\r\n    },\r\n  },\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'hidden',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n}));\r\nconst App = () => {\r\n  console.log('theme', theme);\r\n  const classes = useStyles();\r\n  return (\r\n  \r\n   <div>\r\n     <HomeScreen/>\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js",["115","116","117","118","119"],"import React, { useState } from 'react';\r\nimport theme, { pxToVh } from '../utils/theme';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Footer from '../components/Footer';\r\nimport { Typography } from '@material-ui/core';\r\nimport { InputBase, TextField, OutlinedInput, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: '1vw',\r\n    paddingRight: '1vw',\r\n  },\r\n  textStyle1: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '2.5vw',\r\n    marginTop: '2vh',\r\n  },\r\n  textStyle2: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '1.5vw',\r\n  },\r\n  textfield: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '1.5vw',\r\n  },\r\n  nameInput: {\r\n    fontSize: '1vw',\r\n    color: '#FFFFFF',\r\n  },\r\n  notchedOutline: { borderWidth: '1px', borderColor: '#5DAAE0 !important' },\r\n  searchBtnStarted: {\r\n    marginTop: '8vh',\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: '#5DAAE0',\r\n    '&:hover': {\r\n      backgroundColor: '#5daae0',\r\n      color: 'white',\r\n    },\r\n  },\r\n  searchBtnDisabled: {\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: 'white !important',\r\n    background: '#FFFFFFa5',\r\n    '&:hover': {\r\n      cursor: 'default',\r\n      backgroundColor: '#FFFFFFa5',\r\n    },\r\n  },\r\n  hellotext: {\r\n    fontSize: '4vw',\r\n    color: '#FFFFFFA6',\r\n    height: '10vh',\r\n  },\r\n  hellotext1: {\r\n    fontSize: '2.5vw',\r\n    marginTop: '5vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext3: {\r\n    fontSize: '1vw',\r\n    marginTop: '5vh',\r\n    padding: '0.5vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext2: {\r\n    fontSize: '1.2vw',\r\n    marginTop: '5vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext4: {\r\n    fontSize: '1.5vw',\r\n    marginTop: '2vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n  },\r\n  searchBtn: {\r\n    marginTop: '2vh',\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: '#5DAAE0',\r\n    '&:hover': {\r\n      backgroundColor: '#5daae0',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CollectorDashboard = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [started, setStarted] = useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleGetStarted = (e) => {\r\n    if (started) setName('');\r\n    setStarted((prev) => !prev);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root} spacing={2} xs={12}>\r\n      <Grid\r\n        container\r\n        style={{ height: '95vh' }}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid\r\n          item\r\n          style={{\r\n            height: started ? '90vh' : '45vh',\r\n            width: started ? '60vw' : '40vw',\r\n            backgroundColor: started ? '' : '#252C48',\r\n            display: 'flex',\r\n          }}\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Typography className={classes.textStyle1}>\r\n            {started ? `Hello ${name}` : 'Hey There !'}\r\n          </Typography>\r\n          <Typography className={classes.textStyle2}>\r\n            {started\r\n              ? ' WELCOME TO SUMMER INTERNSHIP 2021'\r\n              : `What's your name?`}\r\n          </Typography>\r\n          {!started ? (\r\n            <>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                autoid=\"ship-to-input\"\r\n                type=\"text\"\r\n                style={{ marginTop: '4vh' }}\r\n                value={name}\r\n                onChange={handleNameChange}\r\n                InputProps={{\r\n                  classes: {\r\n                    input: classes.nameInput,\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Button\r\n                size=\"small\"\r\n                className={classes.searchBtnStarted}\r\n                classes={{ disabled: classes.searchBtnDisabled }}\r\n                disabled={name == ''}\r\n                onClick={handleGetStarted}\r\n              >\r\n                GET STARTED\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: '30vh',\r\n                  width: '51vw',\r\n                  marginTop: '5vh',\r\n                  border: 'solid 1px #5daae0',\r\n                }}\r\n              >\r\n                <Button\r\n                  size=\"medium\"\r\n                  className={classes.searchBtn}\r\n                  onClick={handleGetStarted}\r\n                >\r\n                  CLICK HERE TO GET THE COMPLETE SOURCE CODE OF THE PROJECT\r\n                </Button>\r\n                <Button\r\n                  size=\"medium\"\r\n                  className={classes.searchBtn}\r\n                  onClick={handleGetStarted}\r\n                >\r\n                  CLICK HERE TO BRIBE YOUR MODERATOR DURING EVALUATION\r\n                </Button>\r\n\r\n                <Button\r\n                  size=\"medium\"\r\n                  className={classes.searchBtn}\r\n                  onClick={handleGetStarted}\r\n                >\r\n                  CLICK HERE TO GET ALL UPCOMING QUIZ ANSWERS BEFOREHAND\r\n                </Button>\r\n              </div>\r\n              <Typography className={classes.hellotext3}>\r\n                WITH LOTS OF LOVE,\r\n              </Typography>\r\n              <Typography className={classes.hellotext4}>\r\n                Highradius Illuminati\r\n              </Typography>\r\n              <Typography className={classes.hellotext2}>\r\n                THE ILLUMINATI WILL BE THERE WITH YOU ALWAYS...AND WILL HELP YOU\r\n                WHENEVER YOU ARE STUCK. MAY THE FORCE BE WITH YOU\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CollectorDashboard;\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\Footer.js",["120","121","122"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport theme, { pxToRem } from '../utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw'\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: '100%',\r\n    background: '#252C48',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  titleName: { fontSize: pxToRem(30), color: 'white' },\r\n  subTitleName: {\r\n    fontSize: pxToRem(20),\r\n    color: 'white'\r\n  }\r\n});\r\nfunction Footer(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: 'flex',\r\n        marginRight: '5px',\r\n        justifyContent: 'flex-end',\r\n        height: \"4.5vh\",\r\n        alignItems: \"flex-end\"\r\n      }}\r\n    >\r\n      <Typography style={{ color: 'white' }}>\r\n        Copyright 2020 Highradius. All Rights Reserved.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Footer);\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\Header.js",["123","124"],"import React, { Component } from 'react'\r\nimport HRCLogo from '../assets/logo.svg'\r\nimport mainLogo from '../assets/abc.svg'\r\nimport './Header.css'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={5}>\r\n                    <img src = {mainLogo} className = \"CustLogo\" style={{marginLeft:'3rem'}}/></Grid>\r\n                    <Grid item xs={7}>\r\n                    <img src = {HRCLogo} className = \"HRCLogo\" style={{marginLeft:'1.5rem'}}/></Grid>\r\n                    </Grid>\r\n                <div className = 'Header'><h1>Invoice List</h1></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\views\\HomeScreen.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\MainBody.js",["125","126"],"import React, { Component,useState } from 'react';\r\nimport './MainBody.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddButton from './AddButton.js';\r\nimport EditButton from './EditButton.js';\r\nimport DeleteButton from './DeleteButton.js';\r\nimport PredictButton from './PredictButton.js';\r\nimport ViewCorrespondenceButton from './ViewCorrespondenceButton.js'\r\nimport SearchBarField from './SearchBarField.js';\r\nimport MyTable from './MyTable.js';\r\n\r\n\r\nexport default function MainBody() {\r\n\r\n    const [select,setselect]=useState([]);\r\n\r\n    return (\r\n        <div class=\"outer\">\r\n            <div class=\"inner\">\r\n            <div class=\"buttons\">\r\n            <div style={{display:'flex'}}>\r\n             <PredictButton select={select}/>\r\n             <ViewCorrespondenceButton select={select}/>\r\n             </div>\r\n             <div style={{display:'flex'}}>\r\n             <AddButton/>\r\n             <EditButton    select={select}/>\r\n             <DeleteButton  select ={select}/>\r\n            <SearchBarField/>\r\n            </div>\r\n            </div>        \r\n             <MyTable setselect={setselect}/> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\SearchBarField.js",["127","128"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport action from '../actions/action.js'\r\nimport { useDispatch} from 'react-redux';\r\n\r\nlet debounceTimer = null; \r\n  const debounce = (func) => {\r\n  return function() { \r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(debounceTimer);  \r\n      debounceTimer = setTimeout(() => func.apply(context, args), 500) \r\n  } \r\n} \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    outlineStyle: 'solid', \r\n    outlineColor: '#356680',\r\n    outlineWidth: 'thin',\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '250px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n    height: \"70%\"\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0.75, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'inline',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '22ch',\r\n      '&:focus':{\r\n        width: '26ch'\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [data,setdata] = React.useState('');\r\n  const handleChange = (event) => { \r\n    setdata(event.target.value);\r\n }\r\n\r\n React.useEffect( ()=> {\r\n  changeStoreValue();\r\n},[data]); \r\n\r\nconst changeStoreValue = () => {\r\ndispatch(action(data));\r\n}\r\n\r\n\r\n  return (\r\n          <div className={classes.search} style={{color:'#FFFFFF', backgroundColor:\"#2A3E4C\", marginTop:\"6px\"}}>\r\n              <div style={{color:'#FFFFFF'}}  className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase style={{color:'#FFFFFF'}} placeholder=\"Search by Sales Order ID\" classes={{root: classes.inputRoot,input: classes.inputInput}}\r\n              inputProps={{ 'aria-label': 'search'}} onChange={debounce(handleChange)}\r\n            />\r\n            \r\n          </div>\r\n  );\r\n}\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\PredictButton.js",["129"],"// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     '& > *': {\r\n//       margin: theme.spacing(1),\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// export default function PredictButton() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Button variant=\"contained\" color=\"primary\">\r\n//         Predict\r\n//       </Button>\r\n     \r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PredictButton({select}) {\r\n  const classes = useStyles();\r\n  const [btnDisable, setBtnDisable] = React.useState( true );\r\n\r\n  React.useEffect( () => {\r\n     let arrayids = [];\r\n      console.log(\"inside buttondisable\")\r\n     select.forEach(d => {\r\n        if (d.select) {\r\n          arrayids.push(d.invoice_id);\r\n        }\r\n     } );\r\n    if ( arrayids != '' )\r\n      setBtnDisable( false )\r\n    else\r\n      setBtnDisable(true)\r\n      \r\n      \r\n  },[select]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" disabled={btnDisable} color=\"primary\">\r\n        Predict\r\n      </Button>\r\n     \r\n    </div>\r\n  );\r\n}","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\DeleteButton.js",["130"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    button:{\r\n       float:'right' \r\n    },\r\n    button2:{\r\n        margin:theme.spacing.unit,\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    required:{\r\n      margin: theme.spacing(1),\r\n      display:'inline-block',\r\n      \r\n  },\r\n  blue:{\r\n    margin: theme.spacing(1),\r\n    color:\"#FFFFFF\",\r\n    backgroundColor:\"#14AFF1\",\r\n},\r\ncolour:{\r\n  borderColor:\"#14AFF1\"\r\n},\r\nroot: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n    \r\n}));\r\n\r\n\r\nexport default function DeleteButton({select}) {\r\n    \r\n  const [btDisable, setBtDisable] = React.useState( true );\r\n  const [btColor, setBtColor] = React.useState( \"#97A1A9\" );\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  React.useEffect( () => {\r\n    let arrayids = [];\r\n    select.forEach(d => {\r\n       if (d.select) {\r\n         arrayids.push(d.invoice_id);\r\n       }\r\n    } );\r\n   if ( arrayids != '' ) {\r\n     setBtColor( \"#FFFFFF\" )\r\n     setBtDisable( false )\r\n   }\r\n   else {\r\n     setBtColor(\"#97A1A9\")\r\n     setBtDisable( true )\r\n   }\r\n },[select]);\r\n\r\n\r\n\r\n    const classes=useStyle();\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const deleteByIds = () => {\r\n      let arrayids = [];\r\n      \r\n     select.forEach(d => {\r\n        if (d.select) {\r\n          arrayids.push(d.invoice_id);\r\n        }\r\n      });\r\n      axios\r\n        .get(`http://localhost:8080/1805455/DataDelete?invoice=${arrayids}`)\r\n        .then(data => {\r\n          console.log('error');\r\n          console.log(data);\r\n        })\r\n        .catch(err => alert(err));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n         <Button variant=\"outlined\" color=\"primary\" disabled={btDisable} className={classes.button2} startIcon={<RemoveIcon />}onClick={handleClickOpen}>\r\n          <font color={btColor}>Delete</font>\r\n        </Button>\r\n        <Dialog \r\n          onClose={handleClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={open} \r\n        >\r\n          <DialogTitle  style={{background: '#2A3F4D'}} id=\"customized-dialog-title\" onClose={handleClose} >\r\n\r\n          <font color='white'>Delete record(s)?</font>\r\n          </DialogTitle>\r\n\r\n          <DialogContent style={{background: '#2A3F4D'}}>\r\n            <hr></hr> <br></br>\r\n\r\n            <Typography gutterBottom>\r\n             <font color='white'> You will lose your record(s) after this action. We can't recover them once you delete.</font>\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n            <font color='white'><p> Are you sure you want to<font color='#FF5E5E'> permanently delete</font> them? </p></font>\r\n            <br></br>\r\n            <hr></hr>\r\n            </Typography>\r\n          </DialogContent>\r\n        \r\n\r\n          <DialogActions style={{background: '#2A3F4D'}}>\r\n          <Button onClick={handleClose} color=\"primary\" variant=\"outlined\">\r\n          <font color='white'> Cancel </font>\r\n            </Button>\r\n            <Button  color=\"primary\" variant=\"contained\" onClick={() => {\r\n                deleteByIds();\r\n                window.location.reload();\r\n              }}>\r\n              Delete \r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\EditButton.js",["131","132","133","134"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    button:{\r\n       float:'right' \r\n    },\r\n    button2:{\r\n        margin:theme.spacing.unit,\r\n        color:\"#97A1A9\",\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      \r\n    },\r\n    required:{\r\n      margin: theme.spacing(1),\r\n      display:'inline-block',\r\n      \r\n  },\r\n  blue:{\r\n    margin: theme.spacing(1),\r\n    color:\"#FFFFFF\",\r\n    backgroundColor:\"#14AFF1\",\r\n},\r\ncolour:{\r\n  borderColor:\"#14AFF1\"\r\n},\r\nroot: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n    \r\n}));\r\n\r\n\r\nexport default function EditButton({select}) {\r\n\r\n  const [btDisable, setBtDisable] = React.useState( true );\r\n  const [btColor, setBtColor] = React.useState( \"#97A1A9\" );\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [notesInput,setnotesInput]=React.useState(\"\");\r\n    const [amountInput,setamountInput]=React.useState(\"\");\r\n\r\n    React.useEffect( () => {\r\n      let arrayids = [];\r\n      select.forEach(d => {\r\n         if (d.select) {\r\n           arrayids.push(d.invoice_id);\r\n         }\r\n      } );\r\n     if ( arrayids.length == 1 ) {\r\n       setBtColor( \"#FFFFFF\" )\r\n       setBtDisable( false )\r\n     }\r\n     else {\r\n       setBtColor(\"#97A1A9\")\r\n       setBtDisable( true )\r\n     }\r\n       \r\n       \r\n   },[select]);\r\n\r\n\r\n    const classes=useStyle();\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    \r\n    const re =  (/^[0-9]+$/);\r\n    const inputFunctionamount= event => {\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        setamountInput( event.target.value );\r\n      }}\r\n    \r\n    \r\n\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const resetValues = () => {\r\n      setnotesInput(\"\");\r\n      setamountInput(\"\");\r\n    }\r\n\r\n\r\n    const EditById = () => {\r\n      let arrayids = [];\r\n      \r\n     select.forEach(d => {\r\n        if (d.select) {\r\n          arrayids.push(d.invoice_id);\r\n        }\r\n      });\r\n      axios\r\n        .get(`http://localhost:8080/1805455/DataEdit?invoice=${arrayids}&amount=${amountInput}&notes=${notesInput}`)\r\n        .then(data => {\r\n          console.log(data);\r\n          \r\n        })\r\n        .catch(err => alert(err));\r\n    };\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n\r\n          <Button variant=\"outlined\" disabled={btDisable} color=\"primary\" className={classes.button2} startIcon={<EditIcon color={btColor} />}onClick={handleClickOpen}>\r\n          <font color={btColor}>Edit</font>\r\n          </Button>\r\n            \r\n            \r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" >\r\n                \r\n                <DialogTitle id=\"form-dialog-title\" style={{backgroundColor:\"#2A3E4C\"}}><font color='white'>Edit Invoice</font>\r\n                <Button aria-label=\"close\" onClick={handleClose} endIcon={<CloseIcon />} className={classes.button}> </Button>\r\n                <hr></hr>\r\n                </DialogTitle>\r\n               \r\n            \r\n            <DialogContent style={{backgroundColor:\"#2A3E4C\"}}>\r\n              \r\n                <Grid container spacing={1}>\r\n            <Grid item sm={5}>\r\n              <InputLabel className={classes.margin} display=\"inline-block\" ><font color= '#97A1A9'>Invoice amount</font></InputLabel>\r\n              </Grid>\r\n              <Grid item sm={7}>\r\n              <TextField  size='small'\r\n          type=\"text\" value={amountInput} onChange={inputFunctionamount}  variant=\"outlined\" \r\n          className={classes.margin} style={{marginLeft:'48px'}} />\r\n              </Grid>\r\n              </Grid>\r\n              <Grid container spacing={1}>\r\n              <Grid item xs={6}>\r\n             <InputLabel className={classes.margin}  ><font color='#97A1A9'>Notes</font></InputLabel>\r\n             </Grid>\r\n             <Grid item xs={6}>\r\n             <TextField type=\"text\" value={notesInput} onChange={(event) => setnotesInput(event.target.value)}  \r\n          variant=\"outlined\"  id=\"outlined-multiline-static\" size='small' multiline rows={8}/>\r\n            </Grid>\r\n            </Grid>\r\n            \r\n\r\n            </DialogContent>\r\n            <DialogActions style={{backgroundColor:\"#2A3E4C\"}}>\r\n              <div className=\"ButtonHeader\">\r\n              <Button onClick={handleClose} style={{color:\"#14AFF1\",marginRight:\"333px\"}} className={classes.button3}>\r\n                Cancel\r\n              </Button>\r\n              <div className=\"right\">\r\n              <Button variant=\"outlined\" color=\"#2C404E\" className={classes.colour}  color=\"#FFFFFF\" style={{color:\"#FFFFFF\",\r\n          borderBlockColor:\"#14AFF1\",\r\n          borderColor:\"#14AFF1\"}} onClick={resetValues} color=\"primary\">\r\n                Reset\r\n              </Button>\r\n              <Button variant=\"contained\" className={classes.blue} onClick={() => {\r\n                EditById();\r\n                window.location.reload();\r\n              }}>\r\n               Save\r\n              </Button>\r\n              </div>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog> \r\n          \r\n        </div>\r\n      );\r\n    }","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\AddButton.js",["135","136","137","138","139","140","141","142","143","144","145","146","147"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Fragment, useState } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './AddButton.css';\r\nimport DatePicker from  './datePicker';\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport axios from 'axios';\r\nimport { Paper,Snackbar,IconButton } from '@material-ui/core';\r\n\r\nconst formLabelsTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiFormLabel: {\r\n      asterisk: {\r\n        color: '#db3131',\r\n        '&$error': {\r\n          color: '#db3131'\r\n        },\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    button:{\r\n      float:'right'\r\n    },\r\n    button3:{\r\n      marginRight:'700px'\r\n    },\r\n    button2:{\r\n      margin:theme.spacing.unit,\r\n      color:\"#97A1A9\",\r\n      borderBlockColor:\"#97A1A9\",\r\n      borderColor:\"#97A1A9\"\r\n  },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      color:\"#97A1A9\",\r\n    },\r\n    TextField:{\r\n      border: \"1px solid #356680\",\r\n      borderRadius: \"10px\",\r\n      opacity: \"1\",\r\n      backgroundColor:\"#283A46\",\r\n      borderColor:\"#356680\",\r\n    },\r\n  \r\n  blue:{\r\n    margin: theme.spacing(1),\r\n    color:\"#FFFFFF\",\r\n    backgroundColor:\"#14AFF1\",\r\n  },\r\n  colour:{\r\n   borderColor:\"#14AFF1\"\r\n  },\r\n    \r\n    \r\n}));\r\nexport default function AddButton() {\r\n\r\n    const [snackBar,setsnackBar] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const [date,setdate] = useState('01/01/2021');\r\n\r\n    const [invoiceInput,setinvoiceInput]=React.useState(\"\");\r\n    const [custNumInput,setcustNumInput]=React.useState(\"\");\r\n    const [amountInput,setamountInput]=React.useState(\"\");\r\n    const [nameInput,setnameInput]=React.useState(\"\");\r\n    const [DateInput, setDate] = React.useState(\"01/01/2021\");\r\n    const [notesInput,setnotesInput]=React.useState(\"\");\r\n    const myvalue=\"\";\r\n    \r\n    const checkforSnack = () => {\r\n      if ( invoiceInput === '' || custNumInput === '' || amountInput === '' || nameInput === '' || DateInput === '' ) {\r\n        setsnackBar(true);}\r\n        else{\r\n      functionToSendData();\r\n        window.location.reload();}\r\n      }\r\n    \r\n\r\n    const handleSnack = () => {\r\n      setsnackBar(false);\r\n    }\r\n\r\n    const functionToSendData = () => {\r\n      axios.get(`http://localhost:8080/1805455/DataAdd?name=${nameInput}&custNum=${custNumInput}&amount=${amountInput}\r\n      &invoice=${invoiceInput}&date=${DateInput}&notes=${notesInput}`)\r\n      .then((response)=>{})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const classes=useStyle();\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    \r\n    const re =  (/^[0-9]+$/);\r\n    const inputFunctionCustNum = event => {\r\n    if (event.target.value === '' || re.test(event.target.value)) {\r\n      setcustNumInput( event.target.value );\r\n    }}\r\n\r\n    const inputFunctioninv= event => {\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        setinvoiceInput( event.target.value );\r\n      }}\r\n\r\n    const inputFunctionamount= event => {\r\n        if (event.target.value === '' || re.test(event.target.value)) {\r\n          setamountInput( event.target.value );\r\n        }}\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    React.useEffect( ()=> {\r\n    setDate(date)\r\n    },[date])\r\n\r\n    const DialogContent = withStyles(theme => ({\r\n      root: {\r\n        backgroundColor:\"#2A3E4C\",\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing.unit * 2,\r\n      },\r\n    }))(MuiDialogContent);\r\n    \r\n    const DialogActions = withStyles(theme => ({\r\n      root: {\r\n        backgroundColor:\"#2A3E4C\",\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing.unit,\r\n      },\r\n    }))(MuiDialogActions);\r\n    return (\r\n      <ThemeProvider theme={formLabelsTheme}>\r\n        <div >\r\n          <Button variant=\"outlined\" color=\"#97A1A9\" className={classes.button2} startIcon={<AddIcon />}onClick={handleClickOpen}>\r\n          <font color='white'>Add</font>\r\n          </Button>\r\n          \r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth\r\n                maxWidth=\"md\">\r\n                <DialogTitle id=\"form-dialog-title\" style={{backgroundColor:\"#2A3E4C\"}}><font color='white'>Add Invoice</font>\r\n                <Button aria-label=\"close\" onClick={handleClose} endIcon={<CloseIcon />} className={classes.button}> </Button>\r\n           \r\n            \r\n              <br></br>\r\n              <hr></hr>\r\n\r\n      <form>\r\n      <Grid container spacing={2}>\r\n      <Grid item xs>\r\n      <Grid container spacing={1}>\r\n         <Grid item xs={6}>\r\n           <InputLabel  className={classes.margin} required><font color='white'>Customer name</font></InputLabel>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField  size='small'  type=\"text\" value={nameInput} onChange={(event) => setnameInput(event.target.value)}  variant=\"outlined\"  \r\n         className={classes.margin}  />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <InputLabel className={classes.margin}  required ><font color='white'>Customer No</font></InputLabel>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n\r\n         <TextField size='small' type=\"text\" value={custNumInput} onChange={inputFunctionCustNum}  variant=\"outlined\"  \r\n         className={classes.margin}  />\r\n        </Grid>\r\n      \r\n      <Grid item xs={6}>\r\n          <InputLabel \r\n          className={classes.margin} required ><font color='white'>Sales_Order_ID </font></InputLabel> \r\n        </Grid>\r\n        <Grid item xs={6}>\r\n         <TextField size='small' type=\"text\" value={invoiceInput} onChange={inputFunctioninv}  variant=\"outlined\"  \r\n         className={classes.margin} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <InputLabel className={classes.margin}  required ><font color='white'>Invoice Amount</font></InputLabel>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField  size='small'\r\n          type=\"text\" value={amountInput} onChange={inputFunctionamount}  variant=\"outlined\" \r\n          className={classes.margin} />\r\n        </Grid>\r\n      </Grid>\r\n    \r\n      </Grid>\r\n      <Grid item xs>\r\n\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={6}>\r\n         <InputLabel className={classes.margin}  required > <font color='white'>Due Date </font> </InputLabel>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n        <DatePicker setdate={setdate} onChange={(event) => setDate(event.target.value)} value={DateInput}/>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <InputLabel size='small' className={classes.margin} ><font color='white'>Notes</font></InputLabel>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField type=\"text\" value={notesInput} onChange={(event) => setnotesInput(event.target.value)}  \r\n          variant=\"outlined\"  id=\"outlined-multiline-static\" multiline rows={8}/>\r\n        </Grid>\r\n      </Grid> \r\n      </Grid>\r\n      </Grid>\r\n       </form>\r\n       </DialogTitle>\r\n            <DialogActions>\r\n              <div className=\"ButtonHeader\">\r\n              <Button onClick={handleClose} style={{color:\"#14AFF1\"}} className={classes.button3}>\r\n                Cancel\r\n              </Button>\r\n              <div className=\"right\">\r\n              <Button onClick={()=> {setnameInput(''); setinvoiceInput(''); setcustNumInput(''); setamountInput(''); setnotesInput(''); }}\r\n              variant=\"outlined\" color=\"#2C404E\" className={classes.colour}  color=\"#FFFFFF\" style={{color:\"#FFFFFF\",borderBlockColor:\"#14AFF1\", borderColor:\"#14AFF1\"}} color=\"primary\">\r\n                Clear\r\n              </Button>             \r\n              <Button variant=\"contained\" className={classes.blue} onClick={() => {\r\n                checkforSnack();\r\n              }}>\r\n               Add\r\n              </Button>\r\n              <Snackbar\r\n                    anchorOrigin={{\r\n                      vertical: 'bottom',\r\n                      horizontal:'left',\r\n                    }}\r\n                    open={snackBar}\r\n                    autoHideDuration={300}\r\n                    message=\"Mandatory fields can't be empty.\"\r\n                    action={\r\n                      <React.Fragment>\r\n                        <IconButton size='small' aria-label='close' color='inherit' onClick={handleSnack}>\r\n                          <CloseIcon fontSize='small'/>\r\n                        </IconButton>\r\n                      </React.Fragment>\r\n                    }\r\n                    />\r\n              </div>\r\n              </div>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        </ThemeProvider>\r\n      );\r\n    }","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\datePicker.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\ViewCorrespondenceButton.js",["148","149","150"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport jspdf from 'jspdf';\r\n\r\nexport default function ResponsiveDialog({select}) {\r\n  const [open, setOpen] = React.useState( false );\r\n  const [btnDisable, setBtnDisable] = React.useState( true );\r\n  const [btnColor, setBtnColor] = React.useState( \"#97A1A9\" );\r\n  const [details, setDetails] = React.useState( [] );\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery( theme.breakpoints.down( 'sm' ) );\r\n \r\n  React.useEffect( () => {\r\n     let arrayids = [];\r\n      console.log(\"inside button disable\")\r\n     select.forEach(d => {\r\n        if (d.select) {\r\n          arrayids.push( d.invoice_id );\r\n          setDetails( d );\r\n        }\r\n     } );\r\n    if ( arrayids != '' ) {\r\n      setBtnColor( \"#FFFFFF\" )\r\n      setBtnDisable( false )\r\n    }\r\n    else {\r\n      setBtnColor(\"#97A1A9\")\r\n      setBtnDisable( true )\r\n    }\r\n  }, [select] );\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  var invoice =\"\";\r\n  var name=\"\";\r\n  var amount=\"\";\r\n  var date=\"\";\r\n  var custNum=\"\";\r\n  var table=[];\r\n\r\n  const jsPdfGenerator = () => {\r\n    select.forEach(d => {\r\n      if (d.select) {\r\n        // table=d;\r\n        invoice=d.invoice_id;\r\n        name=d.name_customer;\r\n        amount=d.total_open_amount;\r\n        date=d.due_in_date;\r\n        custNum=d.custNumInput;\r\n      }\r\n    });\r\n\r\n    var doc = new jspdf('p','pt');\r\n    doc.text(`Subject: Invoice Details - ${name}`,20,20);\r\n    doc.text('Dear Sir/Madam, Greetings! This is to remind you that there are one or more',20,50);\r\n    doc.text('open invoices on your account.',20,80);\r\n    doc.text('Please provide at your earliest convenience an update on the payment details',20,110); \r\n    doc.text('or clarify the reason for the delay.',20,140)\r\n    doc.text('If you have any specific issue with the invoice(s), please let us know so that',20,170);\r\n    doc.text('we can address it to the correct Department.',20,200);\r\n    doc.text('Please find the details of the invoices below:',20,230);\r\n    doc.text(' Invoice_Num ---  PO_Num     ---  Date    --- Currency ---  Amount    ',20,290);\r\n    doc.text(`${invoice}   --- ${invoice}  --- ${date}  ---  USD      --- ${amount}  `,20,320);\r\n    doc.text(`Total Amount to be Paid: ${amount}`,20,380);\r\n    doc.text(`In case you have already made a payment for the above items, `,20,410);\r\n    doc.text(`please send us the details to ensure the payment is posted.`,20,440);\r\n    doc.text(`Let us know if we can be of any further assistance.`,20,470); \r\n    doc.text(`Looking forward to hearing from you.`,20,500);\r\n    doc.text(`Kind Regards, Aditya Chaudhary`,20,560);\r\n    doc.text(`Phone : +91-8820558112`,20,590);\r\n    doc.text(`Fax : +91-8820558112, Email : 1805455@kiit.ac.in`,20,620); \r\n    doc.text(`Company Name: ABC Products`,20,650);\r\n    doc.save(\"InvoiceOrder_details.pdf\");\r\n\r\n  }\r\n\r\n  const dataFetch = () => {\r\n    select.forEach(d => {\r\n      if (d.select) {\r\n        table=d;\r\n        invoice=d.invoice_id;\r\n        name=d.name_customer;\r\n        amount=d.total_open_amount;\r\n        date=d.due_in_date;\r\n        custNum=d.custNumInput;\r\n        console.log(\"Updating invoice here in function\",invoice);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{marginTop: '0.5rem' , marginLeft: '0.7rem'}}>\r\n      <Button variant=\"outlined\" color=\"primary\" disabled={btnDisable} onClick = {() => {handleClickOpen(); \r\n      dataFetch();\r\n      \r\n      }}>\r\n        View Correspondence\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n        maxWidth=\"lg\" \r\n      >\r\n        <DialogTitle style={{ backgroundColor: \"#2A3E4C\" }} id=\"responsive-dialog-title\" ><font color='white'>View Correspondence</font>\r\n          <hr></hr>\r\n        </DialogTitle>\r\n        \r\n        \r\n        <DialogContent style={{backgroundColor:\"#2A3E4C\"}} >\r\n        <DialogContentText style={{backgroundColor:\"#2A3E4C\"}} >\r\n            \r\n    <div>\r\n     <p>\r\n     <font color='#97a1a9'>Subject: </font > Invoice Details - {details.name_customer}\r\n     </p>\r\n     </div>\r\n     <div>\r\n     <p>\r\n     Dear Sir/Madam, Greetings! This is to remind you that there are one or more open invoices on your account. \r\n     Please provide at your earliest convenience an update on the payment details or clarify the reason for the delay.\r\n     If you have any specific issue with the invoice(s), please let us know so that we can address it to the correct Department. \r\n     </p>\r\n     </div>\r\n     <div>\r\n        <p>Please find the details of the invoices below:</p>\r\n     </div>\r\n\r\n            <table style={{ border: '2px solid white', margin: \"auto\", textAlign: 'Left', width: '100%'}}>\r\n              <tr style={{color: 'white'}}>\r\n                <th>Sales_Order_Number &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n                <th>Po Number &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n                <th>Sales_Order_Date &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n                <th>Due Date &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n                <th>Currency &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n                <th>Open Amount($)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>\r\n              </tr>\r\n              <tr style={{color: 'white'}}>\r\n                <td>{details.cust_number}</td>\r\n                <td>{details.cust_number}</td>\r\n                <td>{details.due_in_date}</td>\r\n                <td>{details.due_in_date}</td>\r\n                <td>USD</td>\r\n                <td>{details.total_open_amount}</td>\r\n                </tr>\r\n            </table><br>\r\n            </br>\r\n\r\n    <div>\r\n        <p styles={{color: '#C0C6CA'}}>Total Amount to be Paid: ${details.total_open_amount} </p>\r\n        <p> In case you have already made a payment for the above items, please send us the details to ensure the payment is posted. \r\n            Let us know if we can be of any further assistance. \r\n            Looking forward to hearing from you. </p>\r\n            <p>Kind Regards, Aditya Chaudhary </p>\r\n            <p>Phone : +91-8820558112 </p>\r\n            <p> Fax : +91-8820558112 </p>\r\n            <p> Email : 1805455@kiit.ac.in </p>\r\n              <p>Company Name: ABC Products</p>\r\n              <hr></hr>\r\n    </div>\r\n            \r\n\r\n          </DialogContentText>\r\n        </DialogContent >\r\n        <DialogActions style={{backgroundColor:\"#2A3E4C\"}} >\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={jsPdfGenerator} color=\"primary\" variant=\"contained\" autoFocus>\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\SnackbarDialog.js",[],["151","152"],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\reducers\\reducer.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\actions\\action.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\DatePicker.js",[],"C:\\Users\\Aditya\\Desktop\\hrc\\Summer_Internship_UI\\src\\components\\MyTable.js",["153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Table.css\";\r\nimport { CircularProgress, Table, TableCell, TableContainer, TableRow, TableHead, TableBody,Paper } from \"@material-ui/core\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { useSelector } from 'react-redux';\r\nimport { Snackbar,IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Mytheme = createMuiTheme({\r\n  overrides: {\r\n    MuiTableCell: {\r\n      root:{\r\n        borderBottom:'0px'\r\n      },\r\n      body:{\r\n        color: 'rgb(241 231 231 / 87%)',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        maxWidth: '30px'\r\n      },\r\n      head:{\r\n        color:'#97A1A9'\r\n      },\r\n      stickyHeader:{\r\n        color:'#97A1A9',\r\n        backgroundColor:'#2A3E4C'\r\n      }\r\n    },\r\n    MuiTableHead:{\r\n      root:{\r\n        borderBottom: '3px solid #283A46'\r\n      }\r\n\r\n    },\r\n    MuiTableRow: {\r\n      root:{\r\n        '&:nth-of-type(even)':{\r\n          backgroundColor:'#283A46'\r\n        }\r\n      }\r\n    },\r\n    MuiCheckbox: {\r\n      colorSecondary:{\r\n        MuiChecked: {\r\n          color: '#14AFF1'\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n  });\r\n  \r\nexport default function MyTable({setselect}) {\r\n\r\n  const [responseData, setResponseData] = React.useState([]);\r\n  const [isNext, setNext] = React.useState(false);\r\n  const [pageCount, setCount] = React.useState(0);\r\n  const search = useSelector(state => state.searchedField);\r\n  const [zero,setzero]= React.useState(0);\r\n  const [showNoData,setshowNoData]= React.useState(false);\r\n\r\n\r\n  const fetchMoreData= () => {\r\n    setCount(pageCount + 1);\r\n  };\r\n\r\n  const functionTosetPage0 = () => {\r\n    setCount(0); \r\n  };\r\n\r\n  React.useEffect( ()=> {                        \r\n    fetchMoreData()\r\n  },[]);\r\n\r\n  React.useEffect( ()=> {                                          \r\n      setselect(\r\n        responseData.map(d => {\r\n          return {\r\n            select: false,\r\n            id: d.invoice_id,\r\n          };\r\n        })\r\n      );\r\n  },[]);\r\n\r\n  React.useEffect( ()=> {\r\n    if(pageCount !== 0){\r\n      setNext(true);\r\n      axios.get(`http://localhost:8080/1805455/DataFetch?page=${pageCount}`)\r\n    .then((response) => { \r\n      console.log(pageCount);\r\n      const isDataAvailable = response.data && response.data.length;\r\n      if(!isDataAvailable)\r\n      setNext(false);\r\n      setResponseData((prev) => [...prev, ...response.data]);\r\n      console.log(\"data\")\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  },[pageCount]);\r\n\r\n  const scrollThresh = 1;\r\n   React.useEffect( () => {\r\n    setNext(true);\r\n     if(search !==''){\r\n     axios.get(`http://localhost:8080/1805455/DataSearch.do?invoice=${search}`)\r\n    .then((response) => { \r\n      setNext(false);\r\n      setResponseData([...response.data]);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    if(responseData==''){\r\n      setshowNoData(true)\r\n      }\r\n  }else{\r\n    setResponseData([]);\r\n    functionTosetPage0(); \r\n    fetchMoreData() \r\n  }\r\n   },[search]);\r\n  \r\n   const handleSnack = () => {\r\n     setshowNoData(false);\r\n   }\r\n\r\n  return (\r\n    <div>\r\n  <ThemeProvider theme={Mytheme}>\r\n     <TableContainer id='myTableData' style={{height:'65vh',width:'90vw',borderBottom:'0px',borderTop:'0px'}}>\r\n      <Table stickyHeader>  \r\n        <TableHead>\r\n        <TableRow>\r\n        <TableCell>\r\n          <input type=\"checkbox\"  \r\n                onChange={e => {\r\n                  let checked = e.target.checked;\r\n                  setselect(\r\n                    responseData.map( d => {\r\n                      d.select = checked;\r\n                      return d;\r\n                    })\r\n                  );\r\n                }}\r\n              ></input>\r\n          </TableCell>\r\n          <TableCell>Customer Name</TableCell>\r\n           <TableCell>Customer #</TableCell>\r\n           <TableCell>Sales_Order_Id</TableCell>\r\n           <TableCell>Invoice Amount</TableCell>\r\n           <TableCell>Due Date</TableCell>\r\n           <TableCell>Predicted Payment Date</TableCell>\r\n           <TableCell>Predicted Aging Bucket</TableCell>\r\n           <TableCell>Notes</TableCell>\r\n           </TableRow>\r\n        </TableHead>\r\n        \r\n        <TableBody>\r\n          {responseData.map((data, myIndex) => ( \r\n            <TableRow key={data.myIndex}>\r\n            <TableCell>\r\n            <input\r\n                  onChange={event => {\r\n                    let checked = event.target.checked;\r\n                    setselect(\r\n                      responseData.map(d => {\r\n                        if (data.invoice_id === d.invoice_id) {\r\n                          data.select = checked;\r\n                          console.log(\"checking\", data.invoice_id === d.invoice_id );\r\n                        }\r\n                        return d;\r\n                      })\r\n                    );\r\n                  }}\r\n                  type=\"checkbox\"\r\n                  checked={data.select}\r\n                ></input>\r\n          </TableCell>\r\n          <TableCell>{data.name_customer}</TableCell>\r\n           <TableCell>{data.cust_number}</TableCell>\r\n           <TableCell>{data.invoice_id}</TableCell>\r\n           <TableCell>{data.total_open_amount}</TableCell>\r\n           <TableCell>{data.due_in_date}</TableCell>\r\n           <TableCell><center>---</center></TableCell>\r\n           <TableCell><center>---</center></TableCell>\r\n           <TableCell>{data.notes}</TableCell>\r\n           </TableRow>\r\n          ))}\r\n          </TableBody>\r\n          </Table>\r\n            \r\n          <InfiniteScroll\r\n        scrollableTarget='myTableData'\r\n        dataLength={responseData.length}\r\n        next={fetchMoreData}\r\n        scrollThreshold={scrollThresh}\r\n        hasMore={isNext}\r\n        loader={\r\n        <div style={{ height: \"80%\", paddingLeft: \"45%\", overflow: \"hidden\",\r\n         color: \"#ffffff\",display:'flex' ,flexDirection:'column', marginTop:'50px', marginBottom:'150px'}}>\r\n        <CircularProgress />&nbsp;Loading...\r\n        </div>}>\r\n        </InfiniteScroll>\r\n        <div>\r\n        <Snackbar\r\n                    anchorOrigin={{\r\n                      vertical: 'center',\r\n                      horizontal:'center',\r\n                    }}\r\n                    open={showNoData}\r\n                    autoHideDuration={300}\r\n                    message=\"No such Sales_Order_Id Exist.\"\r\n                    action={\r\n                      <React.Fragment>\r\n                        <IconButton size='large' aria-label='close' color='inherit' onClick={handleSnack}>\r\n                        </IconButton>\r\n                      </React.Fragment>\r\n                    }\r\n                    />\r\n        </div>\r\n      </TableContainer>  \r\n  </ThemeProvider>  \r\n  </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"166","severity":1,"message":"167","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":20},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"166","severity":1,"message":"174","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":26},{"ruleId":"166","severity":1,"message":"175","line":6,"column":27,"nodeType":"168","messageId":"169","endLine":6,"endColumn":33},{"ruleId":"166","severity":1,"message":"176","line":6,"column":35,"nodeType":"168","messageId":"169","endLine":6,"endColumn":40},{"ruleId":"166","severity":1,"message":"177","line":6,"column":42,"nodeType":"168","messageId":"169","endLine":6,"endColumn":48},{"ruleId":"166","severity":1,"message":"178","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":21},{"ruleId":"166","severity":1,"message":"179","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":18},{"ruleId":"166","severity":1,"message":"180","line":41,"column":9,"nodeType":"168","messageId":"169","endLine":41,"endColumn":16},{"ruleId":"166","severity":1,"message":"181","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"182","line":2,"column":17,"nodeType":"168","messageId":"169","endLine":2,"endColumn":23},{"ruleId":"166","severity":1,"message":"183","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":19},{"ruleId":"166","severity":1,"message":"184","line":7,"column":32,"nodeType":"168","messageId":"169","endLine":7,"endColumn":45},{"ruleId":"185","severity":1,"message":"186","line":172,"column":32,"nodeType":"187","messageId":"188","endLine":172,"endColumn":34},{"ruleId":"166","severity":1,"message":"189","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"181","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"180","line":32,"column":11,"nodeType":"168","messageId":"169","endLine":32,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":13,"column":21,"nodeType":"192","endLine":13,"endColumn":95},{"ruleId":"190","severity":1,"message":"191","line":15,"column":21,"nodeType":"192","endLine":15,"endColumn":95},{"ruleId":"166","severity":1,"message":"193","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"194","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":20},{"ruleId":"166","severity":1,"message":"195","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":70,"column":3,"nodeType":"198","endLine":70,"endColumn":9,"suggestions":"199"},{"ruleId":"185","severity":1,"message":"200","line":50,"column":19,"nodeType":"187","messageId":"188","endLine":50,"endColumn":21},{"ruleId":"185","severity":1,"message":"200","line":62,"column":18,"nodeType":"187","messageId":"188","endLine":62,"endColumn":20},{"ruleId":"166","severity":1,"message":"201","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":70,"column":27,"nodeType":"187","messageId":"188","endLine":70,"endColumn":29},{"ruleId":"202","severity":1,"message":"203","line":170,"column":86,"nodeType":"204","endLine":170,"endColumn":101},{"ruleId":"202","severity":1,"message":"203","line":172,"column":57,"nodeType":"204","endLine":172,"endColumn":72},{"ruleId":"166","severity":1,"message":"205","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":21},{"ruleId":"166","severity":1,"message":"206","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":21},{"ruleId":"166","severity":1,"message":"201","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":25},{"ruleId":"166","severity":1,"message":"207","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":22},{"ruleId":"166","severity":1,"message":"183","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":17},{"ruleId":"166","severity":1,"message":"208","line":18,"column":10,"nodeType":"168","messageId":"169","endLine":18,"endColumn":18},{"ruleId":"166","severity":1,"message":"189","line":25,"column":10,"nodeType":"168","messageId":"169","endLine":25,"endColumn":15},{"ruleId":"166","severity":1,"message":"209","line":80,"column":12,"nodeType":"168","messageId":"169","endLine":80,"endColumn":24},{"ruleId":"166","severity":1,"message":"210","line":80,"column":26,"nodeType":"168","messageId":"169","endLine":80,"endColumn":42},{"ruleId":"166","severity":1,"message":"211","line":89,"column":11,"nodeType":"168","messageId":"169","endLine":89,"endColumn":18},{"ruleId":"166","severity":1,"message":"212","line":142,"column":11,"nodeType":"168","messageId":"169","endLine":142,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":245,"column":78,"nodeType":"204","endLine":245,"endColumn":93},{"ruleId":"202","severity":1,"message":"203","line":245,"column":170,"nodeType":"204","endLine":245,"endColumn":185},{"ruleId":"166","severity":1,"message":"213","line":15,"column":10,"nodeType":"168","messageId":"169","endLine":15,"endColumn":18},{"ruleId":"185","severity":1,"message":"200","line":30,"column":19,"nodeType":"187","messageId":"188","endLine":30,"endColumn":21},{"ruleId":"166","severity":1,"message":"214","line":99,"column":9,"nodeType":"168","messageId":"169","endLine":99,"endColumn":16},{"ruleId":"170","replacedBy":"215"},{"ruleId":"172","replacedBy":"216"},{"ruleId":"166","severity":1,"message":"189","line":4,"column":93,"nodeType":"168","messageId":"169","endLine":4,"endColumn":98},{"ruleId":"166","severity":1,"message":"167","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":20},{"ruleId":"166","severity":1,"message":"194","line":6,"column":22,"nodeType":"168","messageId":"169","endLine":6,"endColumn":32},{"ruleId":"166","severity":1,"message":"217","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":16},{"ruleId":"166","severity":1,"message":"218","line":10,"column":8,"nodeType":"168","messageId":"169","endLine":10,"endColumn":24},{"ruleId":"166","severity":1,"message":"219","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":19},{"ruleId":"166","severity":1,"message":"220","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":17},{"ruleId":"166","severity":1,"message":"221","line":67,"column":10,"nodeType":"168","messageId":"169","endLine":67,"endColumn":14},{"ruleId":"166","severity":1,"message":"222","line":67,"column":15,"nodeType":"168","messageId":"169","endLine":67,"endColumn":22},{"ruleId":"196","severity":1,"message":"223","line":81,"column":5,"nodeType":"198","endLine":81,"endColumn":7,"suggestions":"224"},{"ruleId":"196","severity":1,"message":"225","line":92,"column":5,"nodeType":"198","endLine":92,"endColumn":7,"suggestions":"226"},{"ruleId":"185","severity":1,"message":"186","line":125,"column":20,"nodeType":"187","messageId":"188","endLine":125,"endColumn":22},{"ruleId":"196","severity":1,"message":"227","line":133,"column":6,"nodeType":"198","endLine":133,"endColumn":14,"suggestions":"228"},"no-unused-vars","'withStyles' is defined but never used.","Identifier","unusedVar","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"'CollectorDashboard' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ROLL_NUMBER' is defined but never used.","'Provider' is defined but never used.","'classes' is assigned a value but never used.","'theme' is defined but never used.","'pxToVh' is defined but never used.","'InputBase' is defined but never used.","'OutlinedInput' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'makeStyles' is defined but never used.","'fade' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'changeStoreValue'. Either include it or remove the dependency array.","ArrayExpression",["231"],"Expected '!==' and instead saw '!='.","'DialogContentText' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'MuiDialogTitle' is defined but never used.","'Fragment' is defined but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'myvalue' is assigned a value but never used.","'DialogContent' is assigned a value but never used.","'btnColor' is assigned a value but never used.","'custNum' is assigned a value but never used.",["229"],["230"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'CloseIcon' is defined but never used.","'zero' is assigned a value but never used.","'setzero' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'fetchMoreData'. Either include it or remove the dependency array.",["232"],"React Hook React.useEffect has missing dependencies: 'responseData' and 'setselect'. Either include them or remove the dependency array. If 'setselect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["233"],"React Hook React.useEffect has missing dependencies: 'fetchMoreData' and 'responseData'. Either include them or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [changeStoreValue, data]",{"range":"243","text":"244"},"Update the dependencies array to be: [fetchMoreData]",{"range":"245","text":"246"},"Update the dependencies array to be: [responseData, setselect]",{"range":"247","text":"248"},"Update the dependencies array to be: [fetchMoreData, responseData, search]",{"range":"249","text":"250"},[1828,1834],"[changeStoreValue, data]",[2207,2209],"[fetchMoreData]",[2454,2456],"[responseData, setselect]",[3486,3494],"[fetchMoreData, responseData, search]"]